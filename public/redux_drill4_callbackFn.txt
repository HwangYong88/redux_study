callback 함수
1. ----------------------------------------------------------------------
정의 : 함수에 파라미터로 들어가는 함수
용도 : 순차적으로 실행하고 싶을 때 쓴다
이벤트리스너(addEventListener)도 콜백함수다
document.querySelector('.button').addEventListener('click', function(){
    console.log('callback'); // 버튼 클릭시 이거 실행되므로 콜백함수다
    }
}
↓　변형 : 함수명을 붙일 수 있다.
document.querySelector('.button').addEventListener('click', 함수명 }
setTimeout(function 함수명(){ },1000)

2. ----------------------------------------------------------------------
setTimeout() -> 몇초후에 이거 실행하세요 라는 함수
setTimeout(function(){ },1000) 도 함수에 파라미터로 함수가 들어가기 때문에 콜백함수다

3. ----------------------------------------------------------------------
콜백함수 만드는 법
function first(파라미터()){
    파라미터()
}
function second(){

}
first(second)
해석 → first함수를 실행하면 second를 파라미터로 하는 함수가 실행된다

4. ----------------------------------------------------------------------
first() 실행후 second() 실행하고싶을때
function first(파라미터){
    console.log(1);
    파라미터()※←second가 실행된다
}
function second(){
    console.log(2);
}
first(second)

5. ----------------------------------------------------------------------
Q. 이거 쓰면 비동기처리가 되는건가요?
- 비동기랑 그딴거랑 관계없습니다 비동기처리지원하는 함수들이 콜백함수 가끔 요구할 뿐임

6. ----------------------------------------------------------------------
promise를 사용하기 혹은 async await
promise란 : 비동기를 간단히 사용할 수 있게 해줌


